openapi: 3.0.1
info:
  title: 'Madaster Private API - Build: 11591'
  description: 'Welcome to the **Madaster Private API** endpoint. This endpoint can be used to interact with the Madaster Platform and its resources. This API does not fully cover all functionality of the platform yet, please see below for the available functions and what they can be used for. For detailed information about the platform and this API, please refer to the [Madaster Documentation](https://docs.madaster.com) or the [Madaster API Documentation](https://docs.madaster.com/api).<br /><br />To access these resources, you need an authorization token. If you do not have one yet, see the chapter about Authorization in the [API documentation](https://docs.madaster.com/api). This token should be sent as a header with the name ''X-API-Key'', which will authenticate the request with the token. The documentation below specifies which requests are available and which responses they might produce.<br /><br />This API can be reached at the endpoint: **[https://api.madaster.com/](https://api.madaster.com/)**'
  contact:
    name: Madaster Services B.V.
    url: https://www.madaster.com
    email: service@madaster.com
  version: v4.0
paths:
  '/api/v4.0/commodity/{id}':
    get:
      tags:
        - Commodity
      summary: Find commodity by ID.
      description: ''
      operationId: Commodity_GetCommodityById
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CommodityBase'
                  - $ref: '#/components/schemas/Material'
                  - $ref: '#/components/schemas/Product'
                description: The base model for Material and Product (contains the shared fields between Material and Product)
                example: 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Commodity
      summary: Delete a commodity.
      description: 'This call can be used to delete a commodity from Madaster, will throw a exception with status 412 when the commodity is in use.'
      operationId: Commodity_DeleteCommodity
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '412':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{databaseId}/external/{externalId}':
    get:
      tags:
        - Commodity
      summary: Find commodity by ExternalID.
      description: ''
      operationId: Commodity_GetCommodityByExternalId
      parameters:
        - name: databaseId
          in: path
          description: The database identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 3c8a8adf-b94b-4754-b1de-ec9dd336a7e0
        - name: externalId
          in: path
          description: The external reference identifier
          required: true
          schema:
            type: string
          example: REF-12345
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CommodityBase'
                  - $ref: '#/components/schemas/Material'
                  - $ref: '#/components/schemas/Product'
                description: The base model for Material and Product (contains the shared fields between Material and Product)
                example: 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v4.0/commodity:
    post:
      tags:
        - Commodity
      summary: Creates a new commodity in the specified database.
      description: This call can be used to create a new commodity in Madaster.
      operationId: Commodity_CreateCommodity
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CommodityBase'
                - $ref: '#/components/schemas/Material'
                - $ref: '#/components/schemas/Product'
              description: The base model for Material and Product (contains the shared fields between Material and Product)
              example: 
          text/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CommodityBase'
                - $ref: '#/components/schemas/Material'
                - $ref: '#/components/schemas/Product'
              description: The base model for Material and Product (contains the shared fields between Material and Product)
              example: 
          application/*+json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CommodityBase'
                - $ref: '#/components/schemas/Material'
                - $ref: '#/components/schemas/Product'
              description: The base model for Material and Product (contains the shared fields between Material and Product)
              example: 
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CommodityBase'
                  - $ref: '#/components/schemas/Material'
                  - $ref: '#/components/schemas/Product'
                description: The base model for Material and Product (contains the shared fields between Material and Product)
                example: 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Commodity
      summary: Update a commodity.
      description: This call can be used to completely update (not a patch) a commodity in Madaster.
      operationId: Commodity_UpdateCommodity
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CommodityBase'
                - $ref: '#/components/schemas/Material'
                - $ref: '#/components/schemas/Product'
              description: The base model for Material and Product (contains the shared fields between Material and Product)
              example: 
          text/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CommodityBase'
                - $ref: '#/components/schemas/Material'
                - $ref: '#/components/schemas/Product'
              description: The base model for Material and Product (contains the shared fields between Material and Product)
              example: 
          application/*+json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CommodityBase'
                - $ref: '#/components/schemas/Material'
                - $ref: '#/components/schemas/Product'
              description: The base model for Material and Product (contains the shared fields between Material and Product)
              example: 
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CommodityBase'
                  - $ref: '#/components/schemas/Material'
                  - $ref: '#/components/schemas/Product'
                description: The base model for Material and Product (contains the shared fields between Material and Product)
                example: 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/children':
    get:
      tags:
        - Commodity
      summary: Get the Bill of Materials (children) for a product.
      description: 'Get the Bill of Materials for a product, when called for a material will throw an error.'
      operationId: Commodity_GetProductChildren
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/BaseChildReference'
                    - $ref: '#/components/schemas/MaterialChildReference'
                    - $ref: '#/components/schemas/ProductChildReference'
                  description: The base model for ProductChildReference and MaterialChildReference.
                  example: 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/children/quantity':
    post:
      tags:
        - Commodity
      summary: Add a quantity product to the Bill of Materials.
      description: 'This call can be used to add a quantity product to the Bill of Materials of a product, in the body to specify which product and the quantity that should be added.'
      operationId: Commodity_AddProductChildByQuantity
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
          text/json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
          application/*+json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
        required: true
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '412':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/children/weight':
    post:
      tags:
        - Commodity
      summary: Add a commodity by weight to the Bill of Materials.
      description: 'This call can be used to add a commodity to the Bill of Materials of a product, in the body to specify which product and the quantity in kilogram (kg) that should be added.'
      operationId: Commodity_AddProductChildByWeight
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
          text/json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
          application/*+json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
        required: true
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '412':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/children/unit':
    post:
      tags:
        - Commodity
      summary: Add a commodity to the Bill of Materials.
      description: 'This call can be used to add a commodity to the Bill of Materials of a product, in the body to specify which product and the quantity in functional units (m3, m2 or m) that should be added.'
      operationId: Commodity_AddProductChildPerFunctionalUnit
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
          text/json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
          application/*+json:
            schema:
              required:
                - commodityId
                - quantity
              allOf:
                - $ref: '#/components/schemas/AddProductChildRequest'
              description: Used to add a commodity to the Bill of Materials of a commodity.
        required: true
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '412':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/children/{childId}':
    delete:
      tags:
        - Commodity
      summary: Deletes a commodity from the Bill of Materials of a product.
      description: This call can be used to remove a commodity to the Bill of Materials of a product.
      operationId: Commodity_DeleteProductChild
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: childId
          in: path
          description: 'The child identifier, this value can be found in the response from the GetProductChildren call.'
          required: true
          schema:
            type: string
            format: uuid
          example: 0fac6b91-36f3-4f8e-99ee-c36003ecefe1
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/lca':
    get:
      tags:
        - Commodity
      summary: Gets the Life Cycle Assessments (LCA) from a commodity.
      description: ''
      operationId: Commodity_GetLifeCycleAssessments
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LifeCycleAssessment'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Commodity
      summary: Adds a Life Cycle Assessment (LCA) to a commodity.
      description: ''
      operationId: Commodity_CreateLifeCycleAssessment
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              required:
                - isoCode
              allOf:
                - $ref: '#/components/schemas/LifeCycleAssessment'
              description: Life Cycle Assessment (LCA) model
          text/json:
            schema:
              required:
                - isoCode
              allOf:
                - $ref: '#/components/schemas/LifeCycleAssessment'
              description: Life Cycle Assessment (LCA) model
          application/*+json:
            schema:
              required:
                - isoCode
              allOf:
                - $ref: '#/components/schemas/LifeCycleAssessment'
              description: Life Cycle Assessment (LCA) model
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeCycleAssessment'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Commodity
      summary: Update the Life Cycle Assessment (LCA) from a commodity.
      description: ''
      operationId: Commodity_UpdateLifeCycleAssessments
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              required:
                - isoCode
              allOf:
                - $ref: '#/components/schemas/LifeCycleAssessment'
              description: Life Cycle Assessment (LCA) model
          text/json:
            schema:
              required:
                - isoCode
              allOf:
                - $ref: '#/components/schemas/LifeCycleAssessment'
              description: Life Cycle Assessment (LCA) model
          application/*+json:
            schema:
              required:
                - isoCode
              allOf:
                - $ref: '#/components/schemas/LifeCycleAssessment'
              description: Life Cycle Assessment (LCA) model
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeCycleAssessment'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/lca/{isoCode}':
    get:
      tags:
        - Commodity
      summary: Gets the Life Cycle Assessment (LCA) for a country from a commodity.
      description: ''
      operationId: Commodity_GetLifeCycleAssessmentByIsocode
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: isoCode
          in: path
          description: The 2 letter iso code for a country.
          required: true
          schema:
            type: string
          example: nl
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeCycleAssessment'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Commodity
      summary: Deletes a Life Cycle Assessment (LCA) from a commodity.
      description: ''
      operationId: Commodity_DeleteLifeCycleAssessment
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: isoCode
          in: path
          description: The 2 letter iso code for a country.
          required: true
          schema:
            type: string
          example: nl
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/files':
    get:
      tags:
        - Commodity
      summary: Gets the files for a commodity.
      description: ''
      operationId: Commodity_GetFiles
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Commodity
      summary: Adds a link to an external file to a commodity.
      description: ''
      operationId: Commodity_CreateExternalFile
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - fileName
                - folderId
                - url
              allOf:
                - $ref: '#/components/schemas/FileInfo'
              description: The file information model
          text/json:
            schema:
              required:
                - fileName
                - folderId
                - url
              allOf:
                - $ref: '#/components/schemas/FileInfo'
              description: The file information model
          application/*+json:
            schema:
              required:
                - fileName
                - folderId
                - url
              allOf:
                - $ref: '#/components/schemas/FileInfo'
              description: The file information model
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Commodity
      summary: Update a file from a commodity.
      description: ''
      operationId: Commodity_UpdateFile
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - fileName
                - folderId
                - url
              allOf:
                - $ref: '#/components/schemas/FileInfo'
              description: The file information model
          text/json:
            schema:
              required:
                - fileName
                - folderId
                - url
              allOf:
                - $ref: '#/components/schemas/FileInfo'
              description: The file information model
          application/*+json:
            schema:
              required:
                - fileName
                - folderId
                - url
              allOf:
                - $ref: '#/components/schemas/FileInfo'
              description: The file information model
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/files/upload':
    post:
      tags:
        - Commodity
      summary: ''
      description: ''
      operationId: Commodity_UploadFile
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/files/{fileId}':
    delete:
      tags:
        - Commodity
      summary: Deletes a file from a commodity.
      description: ''
      operationId: Commodity_DeleteFile
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: fileId
          in: path
          description: The file identifier.
          required: true
          schema:
            type: string
            format: uuid
          example: 20061758-5028-491b-b9cf-053137bbef3d
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/financial':
    get:
      tags:
        - Commodity
      summary: Gets thefinancial settings from a commodity.
      description: ''
      operationId: Commodity_GetFinancialSettings
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FinancialSetting'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Commodity
      summary: Adds a financial setting to a commodity.
      description: ''
      operationId: Commodity_CreateFinancialSetting
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              required:
                - isoCode
                - mode
              allOf:
                - $ref: '#/components/schemas/FinancialSetting'
              description: The financial settings model
          text/json:
            schema:
              required:
                - isoCode
                - mode
              allOf:
                - $ref: '#/components/schemas/FinancialSetting'
              description: The financial settings model
          application/*+json:
            schema:
              required:
                - isoCode
                - mode
              allOf:
                - $ref: '#/components/schemas/FinancialSetting'
              description: The financial settings model
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialSetting'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Commodity
      summary: Updates a financial setting from a commodity.
      description: ''
      operationId: Commodity_UpdateFinancialSettings
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              required:
                - isoCode
                - mode
              allOf:
                - $ref: '#/components/schemas/FinancialSetting'
              description: The financial settings model
          text/json:
            schema:
              required:
                - isoCode
                - mode
              allOf:
                - $ref: '#/components/schemas/FinancialSetting'
              description: The financial settings model
          application/*+json:
            schema:
              required:
                - isoCode
                - mode
              allOf:
                - $ref: '#/components/schemas/FinancialSetting'
              description: The financial settings model
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialSetting'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/financial/{isoCode}':
    delete:
      tags:
        - Commodity
      summary: Deletes a financial setting from a commodity.
      description: ''
      operationId: Commodity_DeleteFinancialSetting
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: isoCode
          in: path
          description: The 2 letter iso code for a country.
          required: true
          schema:
            type: string
          example: nl
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '412':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/images/{name}':
    delete:
      tags:
        - Commodity
      summary: Deletes a commodity image.
      description: ''
      operationId: Commodity_DeleteImage
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: name
          in: path
          description: The name of the image to delete
          required: true
          schema:
            type: string
          example: image.png
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/images':
    post:
      tags:
        - Commodity
      summary: Adds a commodity image.
      description: ''
      operationId: Commodity_UploadImage
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
            encoding:
              image:
                style: form
      responses:
        '202':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/matches':
    get:
      tags:
        - Commodity
      summary: Gets the matching terms for a commodity.
      description: ''
      operationId: Commodity_GetMatches
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchingTerm'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Commodity
      summary: Adds a matching term to a commodity.
      description: ''
      operationId: Commodity_CreateMatch
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MatchingTerm'
              description: 'This model describes a matching term, used to match a value from an IFC document to a specific commodity.'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MatchingTerm'
              description: 'This model describes a matching term, used to match a value from an IFC document to a specific commodity.'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MatchingTerm'
              description: 'This model describes a matching term, used to match a value from an IFC document to a specific commodity.'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingTerm'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Commodity
      summary: Updates a matching term.
      description: ''
      operationId: Commodity_UpdateMatch
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MatchingTerm'
              description: 'This model describes a matching term, used to match a value from an IFC document to a specific commodity.'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MatchingTerm'
              description: 'This model describes a matching term, used to match a value from an IFC document to a specific commodity.'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MatchingTerm'
              description: 'This model describes a matching term, used to match a value from an IFC document to a specific commodity.'
        required: true
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingTerm'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/commodity/{id}/matches/{matchId}':
    get:
      tags:
        - Commodity
      summary: Find a matching term by ID.
      description: ''
      operationId: Commodity_GetMatchById
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: matchId
          in: path
          description: The matching identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 726d7bf5-9e25-4cc7-a0d8-4032553e1178
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingTerm'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Commodity
      summary: Deletes a matching term.
      description: ''
      operationId: Commodity_DeleteMatch
      parameters:
        - name: id
          in: path
          description: The commodity identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 6e943637-0163-4e94-8c17-f0dd7ee4eed5
        - name: matchId
          in: path
          description: The matching identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 726d7bf5-9e25-4cc7-a0d8-4032553e1178
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v4.0/database:
    get:
      tags:
        - Database
      summary: Gets all available databases.
      description: 'Gets the all the databases that the current token has access to, this _includes_ all public available databases.'
      operationId: Database_GetDatabases
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Database'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Database
      summary: Creates a new database.
      description: ''
      operationId: Database_CreateDatabase
      requestBody:
        content:
          application/json:
            schema:
              required:
                - names
              allOf:
                - $ref: '#/components/schemas/Database'
              description: This model describes a database.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Database
      summary: Updates a database.
      description: ''
      operationId: Database_UpdateDatabase
      requestBody:
        content:
          application/json:
            schema:
              required:
                - names
              allOf:
                - $ref: '#/components/schemas/Database'
              description: This model describes a database.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/database/{id}':
    get:
      tags:
        - Database
      summary: Find database by ID.
      description: ''
      operationId: Database_GetDatabaseById
      parameters:
        - name: id
          in: path
          description: The database identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 3c8a8adf-b94b-4754-b1de-ec9dd336a7e0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Database
      summary: Delete a database.
      description: ''
      operationId: Database_DeleteDatabase
      parameters:
        - name: id
          in: path
          description: The database identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 3c8a8adf-b94b-4754-b1de-ec9dd336a7e0
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/database/external/{externalId}':
    get:
      tags:
        - Database
      summary: Find database by ExternalID.
      description: ''
      operationId: Database_GetDatabaseByExternalId
      parameters:
        - name: externalId
          in: path
          description: The external reference identifier
          required: true
          schema:
            type: string
          example: REF-12345
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/database/{id}/commodities':
    get:
      tags:
        - Database
      summary: Gets all commodities from a database.
      description: ''
      operationId: Database_GetCommodities
      parameters:
        - name: id
          in: path
          description: The database identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 3c8a8adf-b94b-4754-b1de-ec9dd336a7e0
        - name: includeInactive
          in: query
          description: Include inactive commodities
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommodityInfo'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/database/{id}/folderstructure':
    get:
      tags:
        - Database
      summary: Gets the dossier folder structure for a database.
      description: 'When creating/uploading a file, you can specifiy in which folder the file should be stored. This call can be used to retrieve the folder structure for a database, the structure can be different per database (depending on the country)'
      operationId: Database_GetDatabaseFolderStructure
      parameters:
        - name: id
          in: path
          description: The database identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 3c8a8adf-b94b-4754-b1de-ec9dd336a7e0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/database/{id}/compliances':
    get:
      tags:
        - Database
      summary: Gets the Lice Cycle Assessment (LCA) compliances for a database.
      description: Depending on the ruleset / country combination different compliances can be used
      operationId: Database_GetDatabaseLCAcompliances
      parameters:
        - name: id
          in: path
          description: The database identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 3c8a8adf-b94b-4754-b1de-ec9dd336a7e0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComplianceInformation'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v4.0/database/{id}/materialfamilies':
    get:
      tags:
        - Database
      summary: Gets the materials families with all possible values for this database
      description: ''
      operationId: Database_GetMaterialClassifications
      parameters:
        - name: id
          in: path
          description: The database identifier
          required: true
          schema:
            type: string
            format: uuid
          example: 3c8a8adf-b94b-4754-b1de-ec9dd336a7e0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialFamily'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v4.0/system/pricesets:
    get:
      tags:
        - SystemSettings
      summary: Gets the available financial price sets.
      description: ''
      operationId: SystemSettings_GetMaterialPriceSets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceSet'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    Accessibility:
      enum:
        - Unknown
        - NotAccessible
        - PartialWithDamage
        - PartialWithRepairableDamage
        - PartialNoDamage
        - Accessible
      type: string
    AddProductChildRequest:
      required:
        - commodityId
        - quantity
      type: object
      properties:
        commodityId:
          type: string
          description: The commodity identifier to add to the Bill of Materials
          format: uuid
          example: ec67e60e-67bb-4a6a-9354-fc47a0a72b60
        quantity:
          type: number
          description: 'The quantity to add, depending on the call this quantity is in #, m3, m2 or m.'
          format: double
          example: 1
      additionalProperties: false
      description: Used to add a commodity to the Bill of Materials of a commodity.
    BaseChildReference:
      required:
        - commodityType
      type: object
      properties:
        commodityType:
          type: string
          description: Describes the commodity type (Product or Material)
          readOnly: true
          example: Global_CommodityType_Example
        id:
          type: string
          description: The Bill of Material child identifier
          format: uuid
          example: 
        commodityId:
          type: string
          description: The commodity identifier
          format: uuid
          example: Global_commodityId_Example
        names:
          $ref: '#/components/schemas/LocalizedString'
        quantity:
          type: number
          description: The quantity of the commodity in the Bill of Materials of a product.
          format: double
          example: 
        quantityType:
          type: string
          description: 'The quantity type (#, m3, m2 or m)'
          nullable: true
          example: 
        weight:
          type: number
          description: The weight of the commodity in the Bill of Materials of a product.
          format: double
          example: 
        weightPercentage:
          type: number
          description: The percentage of the commodity in the Bill of Materials of a product (calculated to the total weight).
          format: double
          example: 
      additionalProperties: false
      description: The base model for ProductChildReference and MaterialChildReference.
      discriminator:
        propertyName: commodityType
        mapping:
          Material: '#/components/schemas/MaterialChildReference'
          Product: '#/components/schemas/ProductChildReference'
      example: 
      x-abstract: true
    Circularity:
      type: object
      properties:
        feedstock:
          allOf:
            - $ref: '#/components/schemas/Feedstock'
          description: Feedstock Input
          example: 
        scarcity:
          allOf:
            - $ref: '#/components/schemas/Scarcity'
          description: Scarcity
          example: 
        output:
          allOf:
            - $ref: '#/components/schemas/Output'
          description: Output
          example: 
      additionalProperties: false
      description: Environment
    CommodityBase:
      required:
        - commodityType
      type: object
      properties:
        commodityType:
          type: string
          description: Describes the commodity type (Product or Material)
          example: Global_CommodityType_Example
        id:
          type: string
          description: The commodity identifier
          format: uuid
          example: Global_commodityId_Example
        databaseId:
          type: string
          description: The database identifier
          format: uuid
          example: Global_databaseId_Example
        externalId:
          type: string
          description: 'Optional: external refence identifier. _Doesn''t support updates!_'
          nullable: true
          example: Global_externalId_Example
        names:
          $ref: '#/components/schemas/LocalizedString'
        descriptions:
          $ref: '#/components/schemas/LocalizedString'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageInfo'
          description: A list of images associated to this commodity
          nullable: true
          readOnly: true
          example: 
        isActive:
          type: boolean
          description: Indicates whether the commodity can be used for mapping to an IFC element
          example: true
        inUse:
          type: boolean
          description: Indicates whether the commodity is mapped to an IFC element
          readOnly: true
          example: true
      additionalProperties: false
      description: The base model for Material and Product (contains the shared fields between Material and Product)
      discriminator:
        propertyName: commodityType
        mapping:
          Material: '#/components/schemas/Material'
          Product: '#/components/schemas/Product'
      example: 
      x-abstract: true
    CommodityInfo:
      type: object
      properties:
        id:
          type: string
          description: The commodity identifier
          format: uuid
          example: Global_commodityId_Example
        names:
          $ref: '#/components/schemas/LocalizedString'
        commodityType:
          type: string
          description: Describes the commodity type (Product or Material)
          example: Global_CommodityType_Example
        externalId:
          type: string
          description: 'Optional: external refence identifier. _Doesn''t support updates!_'
          nullable: true
          example: Global_externalId_Example
        isActive:
          type: boolean
          description: Indicates whether the commodity can be used for mapping to an IFC element
          example: true
      additionalProperties: false
      description: This model describes a simplified view of a commodity.
    Company:
      type: object
      properties:
        name:
          type: string
          description: Name
          nullable: true
          example: 
        street:
          type: string
          description: Street
          nullable: true
          example: 
        zipCode:
          type: string
          description: Zip code
          nullable: true
          example: 
        city:
          type: string
          description: City
          nullable: true
          example: 
        country:
          type: string
          description: Country
          nullable: true
          example: 
        GLN:
          type: string
          description: GLN
          nullable: true
          example: 
        website:
          type: string
          description: Website
          nullable: true
          example: 
      additionalProperties: false
      description: The model describes a company or production site.
    ComplianceInformation:
      type: object
      properties:
        ruleSet:
          type: string
          description: The name of the LCA ruleset
          nullable: true
          example: EN 15804:2012-04+A1 2013
        compliances:
          type: object
          additionalProperties:
            type: string
          description: A dictionary containing the compliances and the country combination
          nullable: true
          example: 
      additionalProperties: false
      description: The LCA compliance information model
    ConnectionType:
      enum:
        - Unknown
        - HardChemicalConnection
        - SoftChemicalConnection
        - DirectConnection
        - AddedConnectionConnection
        - DryConnection
      type: string
    ConnectionTypeDetail:
      enum:
        - Unknown
        - BoltAndNut
        - Spring
        - Corner
        - Screw
        - None
        - Click
        - Velcro
        - Magnetic
        - Glue
        - LandFill
        - Weld
        - Concrete
        - ChemicalAnchor
        - Sealant
        - Foam
        - Peg
        - Nail
      type: string
    Database:
      required:
        - names
      type: object
      properties:
        id:
          type: string
          description: The database identifier
          format: uuid
          example: Global_databaseId_Example
        names:
          $ref: '#/components/schemas/LocalizedString'
        initiallySelectedForEnrichment:
          type: boolean
          description: Is the database selected by default for enrichment
          example: true
        availableInCountries:
          type: array
          items:
            type: string
          description: 'A array of isocodes where the database can be used. _only to be used by special accounts, otherwise you get an error_'
          nullable: true
          example: 
        isAvailableForEverybody:
          type: boolean
          description: 'Indicates if the database is available to all users in the AvailbleInCountries list. _only to be used by special accounts, otherwise you get an error_'
          nullable: true
          example: false
        externalId:
          type: string
          description: 'Optional: external refence identifier. _Doesn''t support updates!_'
          nullable: true
          example: Global_externalId_Example
        readOnly:
          type: boolean
          description: Indicates whether the token has rights to mutate commodities
          nullable: true
          readOnly: true
          example: true
        owner:
          type: string
          description: The database owner
          nullable: true
          readOnly: true
          example: 
      additionalProperties: false
      description: This model describes a database.
    Detachability:
      type: object
      properties:
        connectionType:
          allOf:
            - $ref: '#/components/schemas/ConnectionType'
          description: Connection type
          example: 
        connectionTypeDetail:
          allOf:
            - $ref: '#/components/schemas/ConnectionTypeDetail'
          description: Connection detail
          example: 
        accessibility:
          allOf:
            - $ref: '#/components/schemas/Accessibility'
          description: Connection accessibility
          example: 
        intersection:
          allOf:
            - $ref: '#/components/schemas/Intersection'
          description: Intersections
          example: 
        productEdge:
          allOf:
            - $ref: '#/components/schemas/ProductEdge'
          description: Product edges
          example: 
        index:
          type: number
          description: Detachability index
          format: double
          nullable: true
          readOnly: true
          example: 
      additionalProperties: false
      description: Detachability
      example: 
    EN15804_2012_04_A1_2013:
      type: object
      properties:
        globalWarmingPotential:
          title: Global Warming Potential 100 years
          type: number
          description: Global Warming Potential 100 years (*kg CO2e*)
          format: double
          nullable: true
        ozoneDeplationPotential:
          title: Ozone Deplation Potential
          type: number
          description: Ozone Deplation Potential (*kg CFC11e*)
          format: double
          nullable: true
        photoChemicalOxydantFormation:
          title: Photo Chemical Oxydant Formation
          type: number
          description: Photo Chemical Oxydant Formation (*kg C2H4e*)
          format: double
          nullable: true
        acidificationPotentialOfLandAndWater:
          title: Acidification potential of land and water
          type: number
          description: Acidification potential of land and water (*kg SO2e*)
          format: double
          nullable: true
        eutrophicationPotential:
          title: Eutrophication potential
          type: number
          description: Eutrophication potential (*kg (PO4)&sup3;e*)
          format: double
          nullable: true
        abioticDeplationNonFossile:
          title: Abiotic Deplation Non Fossile
          type: number
          description: Abiotic Deplation Non Fossile (*kg Sbe*)
          format: double
          nullable: true
        abioticDeplationFossile:
          title: Abiotic Deplation Fossile
          type: number
          description: Abiotic Deplation Fossile (*MJ*)
          format: double
          nullable: true
        humanToxicityPotential:
          title: Human toxicity potential
          type: number
          description: 'Human toxicity potential (*kg 1,4-Dichlorobenzene*)'
          format: double
          nullable: true
        freshwaterAquaticEcotoxicityPotential:
          title: Freshwater aquatic ecotoxicity potential
          type: number
          description: 'Freshwater aquatic ecotoxicity potential (*kg 1,4-Dichlorobenzene*)'
          format: double
          nullable: true
        marinewaterAquaticEcotoxicityPotential:
          title: Marinewater aquatic ecotoxicity potential
          type: number
          description: 'Marinewater aquatic ecotoxicity potential (*kg 1,4-Dichlorobenzene*)'
          format: double
          nullable: true
        terrestrialEcotoxicityPotential:
          title: Terrestrial ecotoxicity potential
          type: number
          description: 'Terrestrial ecotoxicity potential (*kg 1,4-Dichlorobenzene*)'
          format: double
          nullable: true
      additionalProperties: false
      description: LCA ruleset EN 15804:2012-04+A1 2013
    EN15804_2012_A2_2019:
      type: object
      properties:
        globalWarmingPotentialTotal:
          title: Global Warming Potential Total
          type: number
          description: Global Warming Potential Total (*kg CO2e*)
          format: double
          nullable: true
        globalWarmingPotentialFossil:
          title: Global Warming Potential Fossile
          type: number
          description: Global Warming Potential Fossile (*kg CO2e*)
          format: double
          nullable: true
        globalWarmingPotentialBiogenic:
          title: Global Warming Potential Biogenic
          type: number
          description: Global Warming Potential Biogenic (*kg CO2e*)
          format: double
          nullable: true
        globalWarmingPotentialLuluc:
          title: Global Warming Potential Land use and Land use change
          type: number
          description: Global Warming Potential Land use and Land use change (*kg CO2e*)
          format: double
          nullable: true
        ozoneDeplationPotential:
          title: Ozone Deplation Potential
          type: number
          description: Ozone Deplation Potential (*kg CFC11e*)
          format: double
          nullable: true
        acidificationPotentialAccumulatedExceedance:
          title: Acidification Potential Accumulated Exceedance
          type: number
          description: Acidification Potential Accumulated Exceedance (*mol H+e*)
          format: double
          nullable: true
        eutrophicationPotentialFreshWater:
          title: Eutrophication Potential Fresh Water
          type: number
          description: Eutrophication Potential Fresh Water (*kg PO4e*)
          format: double
          nullable: true
        eutrophicationPotentialMarineWater:
          title: Eutrophication Potential Marine Water
          type: number
          description: Eutrophication Potential Marine Water (*kg Ne*)
          format: double
          nullable: true
        eutrophicationTerrestrial:
          title: Eutrophication potential terrestrial
          type: number
          description: Eutrophication potential terrestrial (*mol Ne*)
          format: double
          nullable: true
        photoOxidantCreationPotential:
          title: Photo Oxidant Creation Potential
          type: number
          description: Photo Oxidant Creation Potential (*kg NMVOCe*)
          format: double
          nullable: true
        abioticDeplationNonFossile:
          title: Abiotic Deplation Non Fossile
          type: number
          description: Abiotic Deplation Non Fossile (*kg Sbe*)
          format: double
          nullable: true
        abioticDeplationFossile:
          title: Abiotic Deplation Fossile
          type: number
          description: Abiotic Deplation Fossile (*MJ*)
          format: double
          nullable: true
        waterUseDeprivationPotential:
          title: Water Use Deprivation Potential
          type: number
          description: Water Use Deprivation Potential (*m&sup3;e depr.*)
          format: double
          nullable: true
        potentialIncidenceOfDiseaseDueToPMEmissions:
          title: Potential Incidence of disease due to PM emissions
          type: number
          description: Potential Incidence of disease due to PM emissions
          format: double
          nullable: true
        potentialHumanExposureEfficiencyRelativeToU235:
          title: Potential Human Exposure Efficiency relative to U235
          type: number
          description: Potential Human Exposure Efficiency relative to U235 (*kBq U235 eq*)
          format: double
          nullable: true
        ecoTox:
          title: Potential Comparative Toxic Unit for ecosystems (ETP-fw)
          type: number
          description: Potential Comparative Toxic Unit for ecosystems (ETP-fw) (*CTU-e*)
          format: double
          nullable: true
        humanToxCancer:
          title: Potential comparative toxic unit for humans - cancerogenic
          type: number
          description: Potential comparative toxic unit for humans - cancerogenic (*CTU-h*)
          format: double
          nullable: true
        humanToxNonCancer:
          title: Potential comparative toxic unit for humans - not\ncancerogenic
          type: number
          description: Potential comparative toxic unit for humans - not\ncancerogenic (*CTU-h*)
          format: double
          nullable: true
        potentialSoilQualityIndex:
          title: Potential soil quality index
          type: number
          description: Potential soil quality index
          format: double
          nullable: true
      additionalProperties: false
      description: LCA ruleset EN 15804:2012+A2:2019
    Feedstock:
      type: object
      properties:
        renewables:
          type: number
          description: Renewables
          format: double
          example: 
        renewablesSustainablyProduced:
          type: number
          description: Renewable feedstock Sustainably Produced
          format: double
          example: 
        rapidRenewables:
          type: number
          description: Rapid Renewables
          format: double
          example: 
        rapidRenewablesSustainablyProduced:
          type: number
          description: Rapid renewables sustainably produced
          format: double
          example: 
        notRenewables:
          type: number
          description: Not Renewables
          format: double
          readOnly: true
          example: 
        recycled:
          type: number
          description: Recycled
          format: double
          example: 
        recyclingEfficiency:
          type: number
          description: Recycling Efficiency
          format: double
          example: 
        totalPrimary:
          type: number
          description: Virgin feedstock
          format: double
          readOnly: true
          example: 
        totalSecondary:
          type: number
          description: Secondary
          format: double
          readOnly: true
          example: 
      additionalProperties: false
      description: Feedstock Input
    FileInfo:
      required:
        - fileName
        - folderId
        - url
      type: object
      properties:
        id:
          type: string
          description: The file identifier
          format: uuid
          readOnly: true
          example: Global_fileId_Example
        fileName:
          type: string
          description: The file name
          nullable: true
          example: productinformation.pdf
        folderId:
          type: string
          description: The folder identifier.
          format: uuid
          example: 
        folderNames:
          allOf:
            - $ref: '#/components/schemas/LocalizedString'
          readOnly: true
        tags:
          type: array
          items:
            type: string
          description: The tags associated to the file
          nullable: true
          example: 
        url:
          type: string
          description: The URL to download the file
          format: uri
          nullable: true
          example: https://assets.madaster.com/files/productinformation.pdf
        externalId:
          type: string
          description: 'Optional: externe Referenzkennung. _Unterstützt keine Updates!_'
          nullable: true
          example: Global_externalId_Example
      additionalProperties: false
      description: The file information model
    FinancialMode:
      enum:
        - Fallback
        - Manual
        - PriceSet
      type: string
      description: "The financial mode enum.:\n  * `Fallback` - Default: Materials fallback to a default price set based on the classification\n  * `Manual` - Manual price set\n  * `PriceSet` - Use the specified price set"
    FinancialSetting:
      required:
        - isoCode
        - mode
      type: object
      properties:
        isoCode:
          type: string
          description: The 2 letter iso code for a country.
          example: Global_isoCode_Example
        mode:
          allOf:
            - $ref: '#/components/schemas/FinancialMode'
          description: The financial mode enum.
          example: 
        priceSet:
          type: string
          description: The price set identifier (Use the GetMaterialPriceSets operation to get the possible values)
          nullable: true
          example: GOLD_LBMA
        transportCostsCurrencyPerKilo:
          type: number
          description: The transport costs in euro/kg
          format: double
          example: 
        handlingFeedstockPercentage:
          type: number
          description: The feedstock handling costs in euro/kg
          format: double
          example: 
        handlingFeedstockCurrencyPerKilo:
          type: number
          description: The feedstock handling costs in % of price.
          format: double
          example: 
      additionalProperties: false
      description: The financial settings model
    FolderInfo:
      type: object
      properties:
        id:
          type: string
          description: The folder identifier
          format: uuid
          example: 17c35a2a-9259-4612-adfd-dd234c0ac7fd
        folderNames:
          $ref: '#/components/schemas/LocalizedString'
        children:
          type: array
          items:
            $ref: '#/components/schemas/FolderInfo'
          description: The children of this folder
          nullable: true
          example: 
      additionalProperties: false
      description: The folder structure model
    FunctionalUnit:
      enum:
        - Volume
        - Quantity
        - Area
        - Length
      type: string
      description: "This enumeration describes the possible values for the product functional unit:\n  * `Volume` - A product where scaling is performed based on the volume\n  * `Quantity` - A quantity based product, no scaling is being applied\n  * `Area` - A product where scaling is performed based on the area\n  * `Length` - A product where scaling is performed based on the length"
    ImageInfo:
      type: object
      properties:
        name:
          type: string
          description: The image (file)name
          nullable: true
          readOnly: true
          example: logo.png
        url:
          type: string
          description: The url for image _(the url is only valid for 1 hour)_
          format: uri
          nullable: true
          readOnly: true
          example: https://assets.madaster.com/images/logo.png
      additionalProperties: false
      description: Contains the information about an image.
    Intersection:
      enum:
        - Unknown
        - Complete
        - Incidental
        - None
      type: string
    LcaPhase:
      enum:
        - NotSpecified
        - A1_A3
        - A4
        - A5
        - B1
        - B2
        - B3
        - B5
        - B6
        - B7
        - C1
        - C2
        - C3
        - C4
        - D
      type: string
      description: "The Life Cycle Assessment phases enum:\n  * `NotSpecified` - Unspecified phase\n  * `A1_A3` - A1-A3: Production\n  * `A4` - A4: Transport\n  * `A5` - A5: Installation\n  * `B1` - B1: Use/application\n  * `B2` - B2: Maintenance\n  * `B3` - B3: Repair\n  * `B5` - B5: Refurbishment\n  * `B6` - B6: Operational energy use\n  * `B7` - B7: Operational water use\n  * `C1` - C1: De-construction\n  * `C2` - C2: Transport\n  * `C3` - C3: Waste processing\n  * `C4` - C4: Disposal\n  * `D` - D: Recycling Potential"
    LifeCycleAssessment:
      required:
        - isoCode
      type: object
      properties:
        isoCode:
          type: string
          description: The 2 letter iso code for a country.
          example: Global_isoCode_Example
        owner:
          type: string
          description: Dataset owner
          nullable: true
          example: 
        referenceYear:
          type: integer
          description: Reference year
          format: int32
          nullable: true
          example: 
        validUntilYear:
          type: integer
          description: Dataset valid until year
          format: int32
          nullable: true
          example: 
        datasetType:
          type: string
          description: Dataset type
          nullable: true
          example: 
        environmentalCostIndicator:
          type: number
          description: Environmental Cost Indicator
          format: double
          nullable: true
          example: 
        UUID:
          type: string
          description: External UUID
          nullable: true
          example: 
        registrationNumber:
          type: string
          description: External regsitrationnumber
          nullable: true
          example: 
        version:
          type: string
          description: External version description
          nullable: true
          example: 
        compliance:
          type: array
          items:
            type: string
          description: Compliance (Environmental product declaration)
          nullable: true
          example: 
        phases:
          type: array
          items:
            $ref: '#/components/schemas/LifeCycleAssessmentPhase'
          description: Describes the environmental impact per phase
          nullable: true
          example: 
      additionalProperties: false
      description: Life Cycle Assessment (LCA) model
    LifeCycleAssessmentPhase:
      required:
        - phaseId
      type: object
      properties:
        phaseId:
          allOf:
            - $ref: '#/components/schemas/LcaPhase'
          description: The phase identifier
          example: A1_A3
        EN15804_2012_04_A1_2013:
          allOf:
            - $ref: '#/components/schemas/EN15804_2012_04_A1_2013'
          description: LCA ruleset EN 15804:2012-04+A1 2013
          nullable: true
          example: 
        EN15804_2012_A2_2019:
          allOf:
            - $ref: '#/components/schemas/EN15804_2012_A2_2019'
          description: LCA ruleset EN 15804:2012+A2:2019
          nullable: true
          example: 
      additionalProperties: false
      description: Model to describe the LCA values for a specific phase
    LocalizedString:
      title: LocalizedString
      type: object
      properties:
        nl:
          type: string
          nullable: true
        en:
          type: string
          nullable: true
        de:
          type: string
          nullable: true
        fr:
          type: string
          nullable: true
        no:
          type: string
          nullable: true
      additionalProperties:
        type: string
      description: Contains the value of a string in multiple languages. The _iv_ can be used to specify a language invariant value
      example:
        nl: nederlandse naam
        en: english name
        de: deutscher name
    MatchingTerm:
      type: object
      properties:
        id:
          type: string
          description: The matching identifier
          format: uuid
          readOnly: true
          example: Global_matchId_Example
        value:
          type: string
          description: The match value
          nullable: true
          example: concrete
        matchType:
          allOf:
            - $ref: '#/components/schemas/MatchingTermType'
          description: The match type
          example: Contains
        language:
          type: string
          description: 'The match language (allowed values: en, nl, de, fr, no or null)'
          nullable: true
          example: nl
      additionalProperties: false
      description: 'This model describes a matching term, used to match a value from an IFC document to a specific commodity.'
    MatchingTermType:
      enum:
        - EqualsCaseSensitive
        - Equals
        - Startwith
        - ContainsCaseSensitive
        - Contains
        - Endswith
      type: string
      description: "This enumeration describes the possible options for matching a value:\n  * `EqualsCaseSensitive` - Case sensitive equals comparison\n  * `Equals` - Equals comparison\n  * `Startwith` - Starts with comparison\n  * `ContainsCaseSensitive` - Case sensitive contains comparison\n  * `Contains` - Contains comparison\n  * `Endswith` - Ends with comparison"
    Material:
      type: object
      allOf:
        - $ref: '#/components/schemas/CommodityBase'
      properties:
        density:
          type: number
          description: The material density in kg/m3
          format: double
          nullable: true
          example: 1725
        lifespan:
          type: integer
          description: The technical lifespan (in years)
          format: int32
          nullable: true
          example: 25
        supplier:
          type: string
          description: The name of the supplier
          nullable: true
          example: Tata Steel
        materialFamilies:
          type: object
          additionalProperties:
            type: string
          description: The material families this material belongs to. Use the GetMaterialClassifications operation to retrieve the possible values.
          example: '{"madaster": "stone"}'
        circularity:
          allOf:
            - $ref: '#/components/schemas/Circularity'
          description: The material circularity information
          nullable: true
          example: 
      additionalProperties: false
      description: Describes the material model
    MaterialChildReference:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseChildReference'
      additionalProperties: false
      description: Describes a material in the bill of materials of a product
      example: 
    MaterialFamily:
      type: object
      properties:
        id:
          type: string
          description: The material family identifier
          example: madaster
        names:
          $ref: '#/components/schemas/LocalizedString'
        values:
          type: array
          items:
            $ref: '#/components/schemas/MaterialFamilyValue'
          description: The possible values for the family
          example: 
      additionalProperties: false
      description: The material family model
    MaterialFamilyValue:
      type: object
      properties:
        id:
          type: string
          description: The family value identifier
          example: stone
        names:
          $ref: '#/components/schemas/LocalizedString'
      additionalProperties: false
      description: The material family value model
    Output:
      type: object
      properties:
        availableForRecycle:
          type: number
          description: Available for recycle
          format: double
          example: 
        recyclingEfficiency:
          type: number
          description: 'Recycling efficiency '
          format: double
          example: 
        landfill:
          type: number
          description: Landfill
          format: double
          example: 
        incineration:
          type: number
          description: Incineration
          format: double
          readOnly: true
          example: 
      additionalProperties: false
      description: Output
    PriceSet:
      type: object
      properties:
        id:
          type: string
          description: The price set identifier
          readOnly: true
          example: GOLD_LBMA
        names:
          allOf:
            - $ref: '#/components/schemas/LocalizedString'
          readOnly: true
        description:
          allOf:
            - $ref: '#/components/schemas/LocalizedString'
          readOnly: true
        obsolete:
          type: boolean
          description: A value indicating whether the price set is deprecated
          readOnly: true
          example: false
        sources:
          type: array
          items:
            type: string
          description: The sources for this price set (for example London Metal Exchange LME)
          readOnly: true
          example: 
      additionalProperties: false
      description: The price set model
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    Product:
      type: object
      allOf:
        - $ref: '#/components/schemas/CommodityBase'
      properties:
        functionalUnit:
          allOf:
            - $ref: '#/components/schemas/FunctionalUnit'
          description: Defines the type of product
          example: Volume
        defaultFunctionalUnitAmount:
          type: number
          description: 'Describes the default functional unit value. For a volume product, this describes the default volume (m3), for area product the default area (m2) and length product the default length (m)'
          format: double
          example: 1
        fixedHeight:
          type: number
          description: This value describes the fixed height (m) of an area product
          format: double
          nullable: true
          example: 1
        fixedArea:
          type: number
          description: This values describes the fixed area (m2) of a length product
          format: double
          nullable: true
          example: 1
        productCode:
          type: string
          description: The product code
          nullable: true
          example: 1SDA067123R1
        GTIN:
          type: string
          description: The GTIN code
          nullable: true
          example: '08015644010201'
        manufacturer:
          allOf:
            - $ref: '#/components/schemas/Company'
          description: The manufacturer
          nullable: true
          example: 
        productionSite:
          allOf:
            - $ref: '#/components/schemas/Company'
          description: The production site
          nullable: true
          example: 
        lifespan:
          type: integer
          description: The functional lifespan (in years)
          format: int32
          nullable: true
          example: 32
        density:
          type: number
          description: 'The product density in kg/m3. **When this value is omitted, the value is calculated based on the bill of materials**'
          format: double
          nullable: true
          example: 
        weight:
          type: number
          description: 'The product weight in kg. When this value is omitted, the value is calculated based on the bill of materials'
          format: double
          nullable: true
          example: 
        url:
          type: string
          description: External information URL
          format: uri
          nullable: true
          example: https://www.abbconnect.nl/Details/Index.aspx/325971
        doNotUseBillOfMaterals:
          type: boolean
          description: 'A value indicating whether to use the Bill of Materials to calculate the density and/or weight of the product. If false, you have to specify the weight and density of the product.'
          example: false
        calculateEnvironmentValuesFromBillOfMaterials:
          type: boolean
          description: A value indicating whether the environmental values (LCA) are specified or calculated bases on the bill of materials
          example: false
        circularity:
          allOf:
            - $ref: '#/components/schemas/ProductCircularity'
          description: The product circularity information
          nullable: true
          example: 
      additionalProperties: false
      description: This model describes a product
    ProductChildReference:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseChildReference'
      properties:
        functionalUnit:
          allOf:
            - $ref: '#/components/schemas/FunctionalUnit'
          description: Defines the type of product
          example: Volume
      additionalProperties: false
      description: Describes a product in the bill of materials of a product
      example: 
    ProductCircularity:
      type: object
      properties:
        feedstock:
          allOf:
            - $ref: '#/components/schemas/ProductFeedstock'
          description: Feedstock Input
          example: 
        scarcity:
          allOf:
            - $ref: '#/components/schemas/Scarcity'
          description: Scarcity
          example: 
        detachability:
          allOf:
            - $ref: '#/components/schemas/Detachability'
          description: Detachability
          example: 
        output:
          allOf:
            - $ref: '#/components/schemas/ProductOutput'
          description: Output
          example: 
      additionalProperties: false
      description: Environment
      example: 
    ProductEdge:
      enum:
        - Unknown
        - Closed
        - Overlapping
        - Open
      type: string
    ProductFeedstock:
      type: object
      properties:
        renewables:
          type: number
          description: Renewables
          format: double
          example: 
        renewablesSustainablyProduced:
          type: number
          description: Renewable feedstock Sustainably Produced
          format: double
          example: 
        rapidRenewables:
          type: number
          description: Rapid Renewables
          format: double
          example: 
        rapidRenewablesSustainablyProduced:
          type: number
          description: Rapid renewables sustainably produced
          format: double
          example: 
        notRenewables:
          type: number
          description: Not Renewables
          format: double
          readOnly: true
          example: 
        recycled:
          type: number
          description: Recycled
          format: double
          example: 
        recyclingEfficiency:
          type: number
          description: Recycling Efficiency
          format: double
          example: 
        totalPrimary:
          type: number
          description: Virgin feedstock
          format: double
          readOnly: true
          example: 
        totalSecondary:
          type: number
          description: Secondary
          format: double
          readOnly: true
          example: 
        reused:
          type: number
          description: Reused
          format: double
          example: 
      additionalProperties: false
      description: Feedstock Input
      example: 
    ProductOutput:
      type: object
      properties:
        availableForRecycle:
          type: number
          description: Available for recycle
          format: double
          example: 
        recyclingEfficiency:
          type: number
          description: 'Recycling efficiency '
          format: double
          example: 
        landfill:
          type: number
          description: Landfill
          format: double
          example: 
        incineration:
          type: number
          description: Incineration
          format: double
          readOnly: true
          example: 
        availableForReuse:
          type: number
          description: Available for reuse
          format: double
          example: 
      additionalProperties: false
      description: Output
      example: 
    Scarcity:
      type: object
      properties:
        physicalScarce:
          type: number
          description: Exhaustion Risk
          format: double
          example: 
        socialEconomicScarce:
          type: number
          description: Socioeconomic scarce
          format: double
          example: 
      additionalProperties: false
      description: Scarcity
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: Token Authorization
      name: X-API-Key
      in: header
security:
  - ApiKeyAuth: [ ]
tags:
  - name: Commodity
    description: All commodity related actions.
  - name: Database
    description: All database related actions.
  - name: SystemSettings
    description: All system related actions.